var searchIndex = JSON.parse('{\
"base64":{"doc":"Configs","t":"RRNNREDNERNNNNRRNRRNLLLLLLLLLLLLLFLFFFLAFFFFLLLLLLLLLLLLLLALLLLLLLLLLLLLADLLLLLLLLLLDLLLLLLLLLLDDLLLLLLLLLLLLLLLLLLLLLLLLL","n":["BCRYPT","BINHEX","Bcrypt","BinHex","CRYPT","CharacterSet","Config","Crypt","DecodeError","IMAP_MUTF7","ImapMutf7","InvalidByte","InvalidLastSymbol","InvalidLength","STANDARD","STANDARD_NO_PAD","Standard","URL_SAFE","URL_SAFE_NO_PAD","UrlSafe","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","cause","clone","clone","clone","clone_into","clone_into","clone_into","decode","decode_allow_trailing_bits","decode_config","decode_config_buf","decode_config_slice","description","display","encode","encode_config","encode_config_buf","encode_config_slice","eq","equivalent","fmt","fmt","fmt","fmt","from","from","from","into","into","into","new","pad","read","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","write","Base64Display","borrow","borrow_mut","fmt","from","into","to_string","try_from","try_into","type_id","with_config","DecoderReader","borrow","borrow_mut","fmt","from","into","new","read","try_from","try_into","type_id","EncoderStringWriter","EncoderWriter","borrow","borrow","borrow_mut","borrow_mut","drop","finish","flush","flush","fmt","from","from","from","into","into","into_inner","new","new","try_from","try_from","try_into","try_into","type_id","type_id","write","write"],"q":[[0,"base64"],[73,"base64::display"],[84,"base64::read"],[95,"base64::write"],[122,"core::error"],[123,"core::option"],[124,"alloc::vec"],[125,"core::result"],[126,"core::convert"],[127,"alloc::string"],[128,"core::fmt"],[129,"core::fmt"],[130,"core::fmt"],[131,"std::io::error"],[132,"std::io"]],"d":["Bcrypt character set","BinHex character set","The bcrypt character set (uses …","The character set used in BinHex 4.0 files.","As per <code>crypt(3)</code> requirements","Available encoding character sets","Contains configuration parameters for base64 encoding","The <code>crypt(3)</code> character set (uses …","Errors that can occur while decoding.","IMAP modified UTF-7 requirements","The character set used in IMAP-modified UTF-7 (uses <code>+</code> and <code>,</code>…","An invalid byte was found in the input. The offset and …","The last non-padding input symbol’s encoded 6 bits have …","The length of the input is invalid. A typical cause of …","Standard character set with padding.","Standard character set without padding.","The standard character set (uses <code>+</code> and <code>/</code>).","URL-safe character set with padding","URL-safe character set without padding","The URL safe character set (uses <code>-</code> and <code>_</code>).","","","","","","","","","","","","","","Decode from string reference as octets. Returns a Result …","Sets whether to emit errors for nonzero trailing bits.","Decode from string reference as octets. Returns a Result …","Decode from string reference as octets. Writes into the …","Decode the input into the provided output slice.","","Enables base64’d output anywhere you might use a <code>Display</code> …","Encode arbitrary octets as base64. Returns a String. …","Encode arbitrary octets as base64. Returns a String.","Encode arbitrary octets as base64. Writes into the …","Encode arbitrary octets as base64. Writes into the …","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Create a new <code>Config</code>.","Sets whether to pad output with <code>=</code> characters.","Implementations of <code>io::Read</code> to transparently decode base64.","","","","","","","","","","","","","","Implementations of <code>io::Write</code> to transparently handle …","A convenience wrapper for base64’ing bytes into a format …","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","Create a <code>Base64Display</code> with the provided config.","A <code>Read</code> implementation that decodes base64 data read from …","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Create a new decoder that will read from the provided …","Decode input from the wrapped reader.","","","","A <code>Write</code> implementation that base64-encodes data using the …","A <code>Write</code> implementation that base64 encodes data before …","","","","","","Encode all remaining buffered data and write it, including …","Because this is usually treated as OK to call multiple …","","","Returns the argument unchanged.","Create a EncoderStringWriter that will append to the …","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Encode all remaining buffered data, including any trailing …","Create a new encoder that will write to the provided …","Create a EncoderStringWriter that will encode into a new …","","","","","","","Encode input and then write to the delegate writer.",""],"i":[0,0,4,4,0,0,0,4,0,0,4,1,1,1,0,0,4,0,0,4,1,4,5,1,4,5,1,1,4,5,1,4,5,0,5,0,0,0,1,0,0,0,0,0,1,1,1,1,4,5,1,4,5,1,4,5,5,5,0,1,4,5,1,1,4,5,1,4,5,1,4,5,0,0,19,19,19,19,19,19,19,19,19,19,0,21,21,21,21,21,21,21,21,21,21,0,0,24,26,24,26,24,24,24,26,24,24,26,26,24,26,26,24,26,24,26,24,26,24,26,24,26],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[1,[[3,[2]]]],[1,1],[4,4],[5,5],[[-1,-2],6,[],[]],[[-1,-2],6,[],[]],[[-1,-2],6,[],[]],[-1,[[9,[[8,[7]],1]]],[[11,[[10,[7]]]]]],[[5,12],5],[[-1,5],[[9,[[8,[7]],1]]],[[11,[[10,[7]]]]]],[[-1,5,[8,[7]]],[[9,[6,1]]],[[11,[[10,[7]]]]]],[[-1,5,[10,[7]]],[[9,[13,1]]],[[11,[[10,[7]]]]]],[1,14],0,[-1,15,[[11,[[10,[7]]]]]],[[-1,5],15,[[11,[[10,[7]]]]]],[[-1,5,15],6,[[11,[[10,[7]]]]]],[[-1,5,[10,[7]]],13,[[11,[[10,[7]]]]]],[[1,1],12],[[-1,-2],12,[],[]],[[1,16],17],[[1,16],17],[[4,16],17],[[5,16],17],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[4,12],5],[[5,12],5],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,15,[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[[19,16],[[9,[6,20]]]],[-1,-1,[]],[-1,-2,[],[]],[-1,15,[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,18,[]],[[[10,[7]],5],19],0,[-1,-2,[],[]],[-1,-2,[],[]],[[[21,[-1]],16],17,22],[-1,-1,[]],[-1,-2,[],[]],[[-1,5],[[21,[-1]]],22],[[[21,[-1]],[10,[7]]],[[23,[13]]],22],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,18,[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[24,[-1]]],6,25],[[[24,[-1]]],[[23,[-1]]],25],[[[24,[-1]]],[[23,[6]]],25],[[[26,[-1]]],[[23,[6]]],0],[[[24,[-1]],16],17,25],[-1,-1,[]],[[-1,5],[[26,[-1]]],0],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[26,[-1]]],-1,0],[[-1,5],[[24,[-1]]],25],[5,[[26,[15]]]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,18,[]],[-1,18,[]],[[[24,[-1]],[10,[7]]],[[23,[13]]],25],[[[26,[-1]],[10,[7]]],[[23,[13]]],0]],"c":[],"p":[[4,"DecodeError",0],[8,"Error",122],[4,"Option",123],[4,"CharacterSet",0],[3,"Config",0],[15,"tuple"],[15,"u8"],[3,"Vec",124],[4,"Result",125],[15,"slice"],[8,"AsRef",126],[15,"bool"],[15,"usize"],[15,"str"],[3,"String",127],[3,"Formatter",128],[6,"Result",128],[3,"TypeId",129],[3,"Base64Display",73],[3,"Error",128],[3,"DecoderReader",84],[8,"Read",130],[6,"Result",131],[3,"EncoderWriter",95],[8,"Write",130],[3,"EncoderStringWriter",95]]},\
"lib":{"doc":"","t":"INENNNNNDINNNNNMLLLLKLLLFMFMLLFFMMLLMKLAMMFAFMLFLLLLLLFFF","n":["Build","Caption","Handle","Heading","Image","List","Mermaid","OrdList","Presentation","Process","SubHeading","Table","Text","URLVideo","Video","body","borrow","borrow","borrow_mut","borrow_mut","build","build","clone","clone_into","close_last_handle","css_path","file_base64","footer","from","from","generate_logo","generate_mermaid_script","handle","header","into","into","logo_path","process","process","script","script_mermaid","script_path","stv_to_html","style","table_generator","title","to_owned","trim_element","try_from","try_from","try_into","try_into","type_id","type_id","validate_stv","generate_script","generate_style"],"q":[[0,"lib"],[55,"lib::script"],[56,"lib::style"],[57,"alloc::string"],[58,"core::error"],[59,"alloc::boxed"],[60,"core::result"],[61,"core::option"],[62,"core::any"]],"d":["Constrói o arquivo final <code>file.html</code> como método do tipo …","Indica legendas. ","Possíveis handles que indicam como a próxima linha será …","Indica elemento <code>&lt;h1&gt;</code>.","Indica elemento <code>&lt;figure&gt;</code>.","Indica início do elemento <code>&lt;ul&gt;</code> e que os próximos …","Indica as próximas linhas como linhas literais de …","Indica início do elemento <code>&lt;ol&gt;</code> e que os próximos …","Abstração de uma apresentação.","Opera sobre um tipo Presentation confeccionando o <code>HTLM</code> …","Indica elemento <code>&lt;h2&gt;</code>.","Indica o construtor de <code>HTML</code> a partir de texto literal em …","TODO.","Indica elemento <code>&lt;video&gt;</code> construída a partir de URL.","Indica elemento <code>&lt;video&gt;</code>.","","","","","","","","","","Fecha o último handle para que a tag correspondente seja …","","Converte arquivo apontado para base64 e incorpora o …","","Returns the argument unchanged.","Returns the argument unchanged.","Aponta uma logo para ser renderizada caso exista.","Fornece um script padrão para as âncoras <code>.mermaid</code> ou …","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Método que opera sobre <code>Presentation</code> e recebe String como …","Confecciona um script padrão ou retorna de um arquivo …","","","Corta a extensão <code>.stv</code> e apensa <code>.html</code> o nome de arquivo …","Confecciona um CSS padrão ou retorna de um arquivo …","Processa linhas como <code>rows</code> de uma table em <code>HTML</code>. ","","","Remove a âncora da linha que a contém.","","","","","","","Valida o arquivo de entrada como um stv válido. …","Cria um script em JavaScript para compilação, podendo …","Cria um estilo padrão de CSS para compilação quando no …"],"i":[0,7,0,7,7,7,7,7,0,0,7,7,7,7,7,6,6,7,6,7,13,6,7,7,0,6,0,6,6,7,0,0,6,6,6,7,6,14,6,0,6,6,0,0,0,6,7,0,6,7,6,7,6,7,0,0,0],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[-1,1],[[5,[2,[4,[3]]]]],[]],[[6,1],[[5,[2,[4,[3]]]]]],[7,7],[[-1,-2],2,[],[]],[[[8,[7]]],9],0,[[1,9],[[5,[1,[4,[3]]]]]],0,[-1,-1,[]],[-1,-1,[]],[[[8,[1]]],1],[[[8,[1]]],1],0,0,[-1,-2,[],[]],[-1,-2,[],[]],0,[[-1,1,10],[[5,[2,[4,[3]]]]],[]],[[6,1,10],[[5,[2,[4,[3]]]]]],0,0,0,[9,1],0,[[1,10],1],0,[-1,-2,[],[]],[1,1],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,11,[]],[-1,11,[]],[9,[[5,[12,2]]]],[[[8,[1]]],1],[[[8,[1]]],1]],"c":[],"p":[[3,"String",57],[15,"tuple"],[8,"Error",58],[3,"Box",59],[4,"Result",60],[3,"Presentation",0],[4,"Handle",0],[4,"Option",61],[15,"str"],[15,"usize"],[3,"TypeId",62],[15,"bool"],[8,"Build",0],[8,"Process",0]]},\
"stultusvisio":{"doc":"","t":"F","n":["main"],"q":[[0,"stultusvisio"],[1,"core::error"],[2,"alloc::boxed"],[3,"core::result"]],"d":[""],"i":[0],"f":[[[],[[4,[1,[3,[2]]]]]]],"c":[],"p":[[15,"tuple"],[8,"Error",1],[3,"Box",2],[4,"Result",3]]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
